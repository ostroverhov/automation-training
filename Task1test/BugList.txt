ID: BR001

Summary: Class File, Constructor File (), create same files

Steps: 1.create file
        new File(“test.txt”, content)
       2. create new file with same parametrs
        new File(“test.txt”, content)

Actual: Create file

Expected: FileAlreadyExistsException

Status: -

-----------------------------------------------------------------------

ID: BR002

Summary: Class File, Constructor File (), create file with wrong extension

Steps: create file without extension
        new File(“Test.”, content)

Actual: Test

Expected: " "

Status: -

-----------------------------------------------------------------------

ID: BR003

Summary: Class File, Constructor File (), create file with odd char in content

Steps: create file with odd length of content
        new File(“Test.txt”, test contentx)

Actual: 6

Expected: 7

Status: -

-----------------------------------------------------------------------

ID: BR101

Summary: Class FileStorage, Constructor FileStorage (-1), constructor create fileStorage with
        negative size without IllegalArgumentException

Steps: create fileStorage with negative size
        new FileStorage(-1)

Actual: create fileStorage

Expected: IllegalArgumentException

Status: -

-----------------------------------------------------------------------

ID: BR102

Summary: Class FileStorage, Constructor FileStorage (size), constructor create fileStorage with
        parameter size, wrong availableSize

Steps: create fileStorage with parameter size
        new FileStorage(200)

Actual: 300

Expected: 200

Status: -

-----------------------------------------------------------------------

ID: BR103

Summary: Class FileStorage, method delete, size filestorage doesn't change after delete file

Steps:  1.create fileStorage
        FileStorage fs = new FileStorage()
        2.create file and add to file storage
        ReflectionForTest.addFilesToFileStorage(fileStorage, files);
        3. get size fileStorage before delete
        sizeBefore = ReflectionForTest.getAvailableSizeFileStorage(fileStorage);
        4. delete file from fileStorage
        fileStorage.delete(filename);
        5. get size fileStorage after delete
        sizeBefore = ReflectionForTest.getAvailableSizeFileStorage(fileStorage);

Actual: 94

Expected: 100

Status: -